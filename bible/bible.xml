<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
  <meta>
    <author>Vic Mortelmans</author>
    <description>The table contains the complete bible. Each passage is a record, identified by it's citation reference.</description>
    <sampleQuery>select * from bible where language='en' and edition='king james' and book='Luke' and chapter=11 and passage=10</sampleQuery>
    <documentationURL>http://docs.google.com/View?id=ddq89pzk_155t6rwmkhp</documentationURL>
  </meta>
  <bindings>
    <select produces="XML" itemPath="">
      <urls>
        <url></url>
      </urls>
      <inputs>
	    <key id="language" type="xs:string" paramType="variable" required="false" default="en"/>
		<key id="edition" type="xs:string" paramType="variable" required="false"/>
        <key id="book" type="xs:string" paramType="variable" required="true"/>
        <key id="chapter" type="xs:integer" paramType="variable" required="true"/>
        <key id="passage" type="xs:integer" paramType="variable" required="true"/>
      </inputs>
      <execute><![CDATA[ 
	    if (!edition) {
	      var editionsquery = 'select edition from xml where url="http://www.dezuidelijkenederlanden.org/editions.xml" and edition.language like "$language%" and edition.default="true"';
		  editionsquery = editionsquery.replace("$language",language);
		  var editions = y.query(editionsquery).results.editions;
		  if (editions.edition.length() < 1) {
		    var supported_languagesquery = 'select edition.language from xml where url="http://www.dezuidelijkenederlanden.org/editions.xml" and edition.default="true"';
            var supported_languages = y.query(supported_languagesquery).results.editions.edition.language;
		    var error_message = 'Language $language is not supported. Supported bible languages : $supported';
			error_message = error_message.replace("$language",language);
			error_message = error_message.replace("$supported",stringListValue(supported_languages));
			y.log(error_message);
			y.exit();
		  }
		} else {
          var editionsquery = 'select edition from xml where url="http://www.dezuidelijkenederlanden.org/editions.xml" and edition.input like "%$edition%"';
		  editionsquery = editionsquery.replace("$edition",edition);
          var editions = y.query(editionsquery).results.editions;
		  if (editions.edition.length() < 1) {
		    if (language) {
		      var supported_editionsquery = 'select edition.input from xml where url="http://www.dezuidelijkenederlanden.org/editions.xml" and edition.language like "$language%"';
			  supported_editionsquery = supported_editionsquery.replace("$language",language);
              var supported_editions = y.query(supported_editionsquery).results.editions.edition.input;
		      var error_message = 'Edition $edition is not supported. Supported bible editions for language "$language": $supported';
			  error_message = error_message.replace("$edition",edition);
			  error_message = error_message.replace("$language",language);
			  error_message = error_message.replace("$supported",stringListValue(supported_editions));
			}
			if (!language || supported_editions.length() < 1) {
		      var supported_editionsquery = 'select edition.input from xml where url="http://www.dezuidelijkenederlanden.org/editions.xml"';
              var supported_editions = y.query(supported_editionsquery).results.editions.edition.input;
		      var error_message = 'Edition $edition is not supported. Supported bible editions: $supported';
			  error_message = error_message.replace("$edition",edition);
			  error_message = error_message.replace("$supported",stringListValue(supported_editions));
			}
			y.log(error_message);
			y.exit();
		  }
		}
		var edition_switch = editions.edition[0].switch_id.toString();
		var service_switch = editions.edition[0].service.toString();
		var language_switch = editions.edition[0].language.toString();
		var edition_name = editions.edition[0].input.(@type=="name").toString();
		
		switch (service_switch) {
			case "biblija_net":
				y.log("using " + edition_name);
                response.object = biblija_net();
				break;
			default:
				y.log("Internal error - service switch : " + service_switch);
				y.exit();
		}
		
		function stringValue(node) {
			var value = "";
			if (node.hasSimpleContent()) {
				value = node.toString();
			} else {
				for each (var c in node.children()) {
					value += stringValue(c);
				}
			}
			return value;
		}
		
		function stringListValue(node) {
			var value = "";
			if (node.hasSimpleContent()) {
				value = node.toString();
			} else {
				for each (var c in node.children()) {
					value += stringValue(c) + ", ";
				}
				value = value.replace(/, $/,'');
			}
			return value;
		}

		function biblija_net() {
			var edition_api = editions.edition[0].biblija_net.toString();
			var booksquery = 'select book.biblija_net from xml where url="http://www.dezuidelijkenederlanden.org/books.xml" and book.input like "$book%"';
			booksquery = booksquery.replace("$book",book);
			var books = y.query(booksquery).results.books;
		    if (books.book.length() < 1) {
		        var error_message = '$book is not a bible book. Common bible book abbreviations : $supported';
		        error_message = error_message.replace("$book",book);
		        error_message = error_message.replace("$supported","http://biblewiki.net/books/index");
				y.log(error_message);
			    y.exit();
		    }
            var book_api = books.book[0].biblija_net.toString();
            var url = "http://www.biblija.net/biblija.cgi?Bible=Bible&m=$citation&compact=1&$edition_api=1&pos=0&set=1&l=en";
			url = url.replace("$citation",escape(book_api + " " + chapter + ":" + passage));
			url = url.replace("$edition_api",escape(edition_api));
            var yql = "select * from html where url='$url' and xpath='//tr[@class=\"tr-odd\"]'";
			yql = yql.replace("$url",url);
            var queryoutput = y.query(yql).results;
			var i = 0;
            var nrofitemstodelete = 0;
            nrofitemstodelete = queryoutput..div.(@["class"] == 'opomba-layer').length(); // tooltip-footnotes
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..div.(@["class"] == 'opomba-layer')[0];
			}
            nrofitemstodelete = queryoutput..span.(@["class"] == 'v').length(); // passage numbers
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..span.(@["class"] == 'v')[0];
			}
            nrofitemstodelete = queryoutput..span.(@["class"] == 'c').length(); // chapter numbers
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..span.(@["class"] == 'c')[0];
			}
            nrofitemstodelete = queryoutput..div.(@["class"] == 's1').length(); // subtitles
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..div.(@["class"] == 's1')[0];
			}
            nrofitemstodelete = queryoutput..div.(@["class"] == 's').length(); // subtitles
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..div.(@["class"] == 's')[0];
			}
            nrofitemstodelete = queryoutput..div.(@["class"] == 'mt').length(); // chapter titles
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..div.(@["class"] == 'mt')[0];
			}
            nrofitemstodelete = queryoutput..script.length(); // google ads 
			for (i=0;i<nrofitemstodelete;i++) {
				delete queryoutput..script[0];
			}
			return <passage>{stringValue(queryoutput)}</passage>;	
		}
      ]]></execute>
      </select>
  </bindings>
</table>
