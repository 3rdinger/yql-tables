<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author>
            Thomas Fowler
        </author>
        <description>
            Yahoo Finance Quotes - Options Chain
        </description>
        <sampleQuery>
            select * from {table}
        </sampleQuery>
    </meta>
    <bindings>
        <select itemPath="" produces="XML">
            <urls>
                <url>
                </url>
            </urls>
            <inputs>
            	<key id="symbol" type="xs:string" paramType="variable" required="true" />
            </inputs>
            <execute>
                <![CDATA[
				
					// pad string with leading char
					
					String.prototype.pad = function ( padchar, padlen )
					{
						s = this
						
						while (s.length < padlen)
						{
							s = padchar + s;
						}
						
						return s;
					}
					 
					String.prototype.trim = function ()
					{
						var str = this.replace( /^\s\s*/, "" ),
						ws = /\s/,
						i = str.length;
						while ( ws.test( str.charAt( --i ) ) );
						return str.slice( 0, i + 1 );
					}
					 
					String.prototype.toInt = function ()
					{
						// remove leading 0's because otherwise str can be interpreted as Octal
						
						var str = this.replace( /^0+/, '' );
						return parseInt( str );
					}
					 
					function getOptionsChain()
					{
						// Get the Options Chain for the given symbol from the Options page
						
						var results = optionsChainQuery.results;
						
						elements = results.*.length();
						
						if ( elements == 0 )
						{
							return false;
						}
						
						var optionElem;
						
						var strikePrice;
						var optionSymbol;
						var last;
						var change;
						var changeDir;
						var bid;
						var ask;
						var vol;
						var openInt;
						
						for each ( var tr in results.tr )
						{
							strikePrice = parseFloat( tr.td[0].strong.a.text() );
							optionSymbol = tr.td[1].a.text();
							lastPrice = tr.td[2].strong.span.text();
							change = tr.td[3].span.strong.text();
							changeDir = tr.td[3].span.image.@alt.toString();
							bid = parseFloat( tr.td[4].span.text() );
							ask = parseFloat( tr.td[5].span.text() );
							vol = parseInt( tr.td[6].span.text() );
							openInt = parseInt( tr.td[7].p.text() );
							
							if ( changeDir.toLowerCase() == "down" )
							{
								change = parseFloat( change ) * -1;
							}
							else
							{
								change = parseFloat( change );
							}
							
							optionElem = <option symbol={optionSymbol}></option>;
							optionElem.appendChild(<strikePrice>{strikePrice}</strikePrice>);
							optionElem.appendChild(<lastPrice>{lastPrice}</lastPrice>);
							optionElem.appendChild(<change>{change}</change>);
							optionElem.appendChild(<bid>{bid}</bid>);
							optionElem.appendChild(<ask>{ask}</ask>);
							optionElem.appendChild(<vol>{vol}</vol>);
							optionElem.appendChild(<openInt>{openInt}</openInt>);
							
							optionsChain.appendChild( optionElem );
						}
						
						return true;
					}
					 
					// Queue the query
					 
					var optionsChainURL = "http://finance.yahoo.com/q/op?s=" + symbol;
					
					var optionsChainQuery = y.query(
						"select * from html " +
						"where url=@optionsChainURL and " +
						"xpath=\"//table[@class='yfnc_datamodoutline1']/tr/td/table/tr[td[@class='yfnc_h']]\",
						{url: optionsChainURL}
					);
					 
					var optionsChain = <optionsChain symbol={symbol}></optionsChain>;
					 
					getOptionsChain();
					
					response.object = optionsChain;
					 
					]]>
            </execute>
        </select>
    </bindings>
</table>
